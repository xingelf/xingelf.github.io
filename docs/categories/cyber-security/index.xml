<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyber Security on Try Harder</title>
    <link>https://xingelf.github.io/categories/cyber-security/</link>
    <description>Recent content in Cyber Security on Try Harder</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://xingelf.github.io/categories/cyber-security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XML CDATA Complete Guide: How to Handle Special Characters in XML</title>
      <link>https://xingelf.github.io/tech/xml-cdata/</link>
      <pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/xml-cdata/</guid>
      <description>&lt;p&gt;Master XML CDATA sections with practical examples. Learn when to use CDATA vs escaping, security best practices, and real-world applications for JavaScript, CSS, and HTML embedding.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Preflight OPTIONS Requests: The CORS Gatekeeper</title>
      <link>https://xingelf.github.io/tech/preflight_options/</link>
      <pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/preflight_options/</guid>
      <description>&lt;p&gt;When building web apps, you&amp;rsquo;ve likely encountered mysterious &lt;code&gt;OPTIONS&lt;/code&gt; requests in your network logs. These aren&amp;rsquo;t errors‚Äîthey&amp;rsquo;re your browser&amp;rsquo;s &lt;strong&gt;security guardians&lt;/strong&gt;! Let&amp;rsquo;s demystify this crucial CORS mechanism.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding SQL Collation: The Secret Sauce Behind String Sorting &amp; Comparison</title>
      <link>https://xingelf.github.io/tech/sql_collation/</link>
      <pubDate>Sat, 21 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/sql_collation/</guid>
      <description>&lt;p&gt;Collation is SQL&amp;rsquo;s rulebook for &lt;strong&gt;text data handling&lt;/strong&gt;! It defines:&lt;/p&gt;</description>
    </item>
    <item>
      <title>ObjectDataProvider: Your Data Waiter in WPF Applications</title>
      <link>https://xingelf.github.io/tech/object_data_provider/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/object_data_provider/</guid>
      <description>&lt;p&gt;&lt;strong&gt;ObjectDataProvider&lt;/strong&gt; is a powerful data intermediary in WPF that declaratively connects business logic to UI elements. Think of it as a restaurant system:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering .NET Reverse Engineering with dnSpy</title>
      <link>https://xingelf.github.io/tech/dnspy/</link>
      <pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/dnspy/</guid>
      <description>&lt;p&gt;As attack surfaces evolve, understanding .NET application internals becomes critical. &lt;strong&gt;dnSpy&lt;/strong&gt; - an open-source .NET decompiler/debugger - is a Swiss Army knife for security professionals analyzing malicious binaries, auditing code vulnerabilities, and reverse engineering proprietary protocols. This guide delivers practical dnSpy techniques for security research.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Source to Sink: Core Penetration Testing Approach</title>
      <link>https://xingelf.github.io/tech/source_sink2/</link>
      <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/source_sink2/</guid>
      <description>&lt;h3 id=&#34;-1-investigating-blind-spots-in-authenticated-areas&#34;&gt;üéØ 1. Investigating Blind Spots in Authenticated Areas&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;üö© Source&lt;/strong&gt;: Parameters in authenticated functionality&lt;br&gt;&#xA;&lt;strong&gt;‚ö†Ô∏è Sink&lt;/strong&gt;: Privileged operations&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Ultimate Guide to Handlebars Template Engine: From Fundamentals to Expert Practices</title>
      <link>https://xingelf.github.io/tech/handlebars/</link>
      <pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/handlebars/</guid>
      <description>&lt;p&gt;Handlebars is a &lt;strong&gt;logic-less templating engine&lt;/strong&gt; for JavaScript, designed to generate dynamic HTML/text content. Built as an extension of Mustache, it combines simplicity with powerful features like &lt;strong&gt;custom helpers&lt;/strong&gt; and &lt;strong&gt;precompilation&lt;/strong&gt;, making it suitable for both frontend (e.g., React, Vue) and backend (Node.js) workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reverse Image Search: Technical Deep Dive and Advanced Applications</title>
      <link>https://xingelf.github.io/tech/reverse_image_search/</link>
      <pubDate>Fri, 09 May 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/reverse_image_search/</guid>
      <description>&lt;p&gt;Reverse Image Search (RIS) is &lt;strong&gt;a retrieval technology that uses visual input (images) as queries to identify similar images, contextual information, or metadata&lt;/strong&gt;. Unlike text-based searches, RIS relies on analyzing low-level and high-level image features, enabling applications in copyright enforcement, counterfeit detection, academic research, and more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unmasking Prototype Pollution: A Deep Dive into the Mechanics and Mitigation Strategies</title>
      <link>https://xingelf.github.io/tech/prototype_pollution/</link>
      <pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/prototype_pollution/</guid>
      <description>&lt;p&gt;In the evolving landscape of web application security, &lt;strong&gt;Prototype Pollution&lt;/strong&gt; has emerged as a sophisticated and potentially critical vulnerability, particularly within &lt;strong&gt;JavaScript&lt;/strong&gt; environments. Exploiting the inherent prototypal inheritance mechanism of JavaScript, this attack vector allows malicious actors to inject or overwrite properties in the prototypes of objects, leading to unexpected and often detrimental consequences for the application&amp;rsquo;s integrity and security.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wireless Attack</title>
      <link>https://xingelf.github.io/tech/wireless_attack/</link>
      <pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/wireless_attack/</guid>
      <description>&lt;p&gt;Wireless attacks are security threats that target wireless networks and devices. These attacks exploit vulnerabilities in wireless protocols, authentication mechanisms, and network configurations. Understanding these attack vectors is crucial for implementing proper security measures and protecting wireless networks from unauthorized access and data breaches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding DOM-based XSS: Mechanism, Examples, and Prevention</title>
      <link>https://xingelf.github.io/tech/dom-based_xss/</link>
      <pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/dom-based_xss/</guid>
      <description>&lt;p&gt;Web security is paramount for both users and website providers. Among the various web vulnerabilities, Cross-Site Scripting (XSS) is a prominent attack method targeting users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding and Mitigating SMTP Open Relays: A Technical Deep Dive</title>
      <link>https://xingelf.github.io/tech/smtp_openrelay/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/smtp_openrelay/</guid>
      <description>&lt;p&gt;Email remains a cornerstone of modern communication, underpinned by the Simple Mail Transfer Protocol (SMTP). While seemingly straightforward, misconfigurations within SMTP servers, particularly leading to an &amp;ldquo;open relay&amp;rdquo; state, pose significant security risks. üö® This article provides a technical explanation of SMTP relaying, defines what constitutes an open relay, details its mechanisms and severe consequences, outlines detection methods, and presents essential mitigation strategies for technical professionals.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Active Directory Reconnaissance: In-Depth Analysis of Attacker Techniques</title>
      <link>https://xingelf.github.io/tech/active_directory/</link>
      <pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/active_directory/</guid>
      <description>&lt;p&gt;Attackers leverage &lt;strong&gt;standard tools and legitimate privileges&lt;/strong&gt; to conduct reconnaissance in Active Directory (AD). If undetected, this phase enables lateral movement and privilege escalation. This article dissects &lt;strong&gt;advanced commands used in real-world attacks&lt;/strong&gt; and provides defensive countermeasures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>XSS Hunting: Risks of document.write and Detection Strategies</title>
      <link>https://xingelf.github.io/tech/xss_dom_huting/</link>
      <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://xingelf.github.io/tech/xss_dom_huting/</guid>
      <description>&lt;p&gt;The &lt;code&gt;document.write&lt;/code&gt; method in JavaScript remains a critical vector for Cross-Site Scripting (XSS) vulnerabilities. While it dynamically injects HTML content, improper handling of user input can enable attackers to execute arbitrary scripts. This article explores practical techniques to identify and mitigate risks associated with &lt;code&gt;document.write&lt;/code&gt;, supported by real-world cases and defensive frameworks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
